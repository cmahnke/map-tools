name: Publish Docker images

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: write

jobs:
  build_conversion_tools:
    name: Push conversion-tools Docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [build_osmium, build_tilemaker, build_osmctools]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/conversion-tools/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/conversions-tools:latest

  build_osmosis:
    name: Push osmosis Docker image to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [main, 0.49.0]
        include:
          - version: main
            IMAGE_TAG: latest
          - version: 0.49.0
            IMAGE_TAG: 0.49.0
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          build-args: |
            OSMOSIS_TAG=${{ matrix.version }}
          file: docker/osmosis/Dockerfile
          network: host
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/osmosis:${{ matrix.IMAGE_TAG }}

  build_basemaps:
    name: Push mapsplit Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/basemaps/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/basemaps:latest

  build_mapsplit:
    name: Push mapsplit Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/mapsplit/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/mapsplit:latest

  build_planetiler:
    name: Push planetiler Docker image to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [main, v0.8.3]
        data: ['', '-data']
        include:
          - version: main
            IMAGE_TAG: latest
          - version: v0.8.3
            IMAGE_TAG: 0.8.3
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push latest Git version to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/planetiler/Dockerfile
          platforms: linux/amd64,linux/arm64
          network: host
          build-args: |
            PLANETILER_TAG=${{ matrix.version }}
            DOWNLOAD_DATA=${{ matrix.data }}
          tags: |
            ghcr.io/cmahnke/map-tools/planetiler:${{ matrix.IMAGE_TAG }}${{ matrix.data }}


#  build_planetiler_native:
#    name: Push planetiler native Docker image to GitHub Packages
#    needs: [build_planetiler]
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        version: [main, v0.7.0]
#        include:
#          - version: main
#            IMAGE_TAG: latest
#          - version: v0.7.0
#            IMAGE_TAG: 0.7.0
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v5
#        with:
#          submodules: true
#          fetch-depth: 0
#      - name: Login to GitHub Packages Docker Registry
#        uses: docker/login-action@v3.5.0
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          logout: false
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3.11.1
#      - name: Push latest Git version to GitHub Packages
#        uses: docker/build-push-action@v6.18.0
#        with:
#          push: true
#          context: .
#          file: docker/planetiler.native/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          build-args: |
#            PLANETILER_TAG=${{ matrix.IMAGE_TAG }}
#            KEEP_DATA=true
#          tags: |
#            ghcr.io/cmahnke/map-tools/planetiler:${{ matrix.IMAGE_TAG }}-native

  build_baremaps:
    name: Push baremaps Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/baremaps/Dockerfile
          network: host
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/baremaps:latest

  build_osmium:
    name: Push osmium Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/osmium/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/osmium:latest

  build_osmctools:
    name: Push osmctools Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/osmctools/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/osmctools:latest

  build_tilemaker:
    name: Push tilemaker Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/tilemaker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/tilemaker:latest

  build_mbutil:
    name: Push mbutil Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          context: .
          file: docker/mbutil/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/cmahnke/map-tools/mbutil:latest

#  build_data_builder:
#    name: Push data-builder Docker image to GitHub Packages
#    runs-on: ubuntu-latest
#    needs: [build_planetiler_data, build_osmium, build_osmctools]
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v5
#        with:
#          submodules: true
#          fetch-depth: 0
#      - name: Login to GitHub Packages Docker Registry
#        uses: docker/login-action@v3.5.0
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          logout: false
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3.11.1
#      - name: Push to GitHub Packages
#        uses: docker/build-push-action@v6.18.0
#        with:
#          push: true
#          context: .
#          file: docker/databuilder/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          tags: |
#            ghcr.io/cmahnke/map-tools/data-builder:latest

#  build_database:
#    name: Push database Docker image to GitHub Packages
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v5
#        with:
#          submodules: true
#          fetch-depth: 0
#      - name: Login to GitHub Packages Docker Registry
#        uses: docker/login-action@v3.5.0
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          logout: false
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3.11.1
#      - name: Push to GitHub Packages
#        uses: docker/build-push-action@v6.18.0
#        with:
#          push: true
#          context: .
#          file: docker/database/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          tags: |
#            ghcr.io/cmahnke/map-tools/database:latest
